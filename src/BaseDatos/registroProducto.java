
package BaseDatos;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;

/**
 *
 * @author zombozo
 */
public class registroProducto extends javax.swing.JFrame {
ArrayList<String> items=new ArrayList<>();
ArrayList<String> itemsFabricante=new ArrayList<>();
String fabricantes;

productos productos;
Statement sentencia;

    public registroProducto() {
        initComponents();
        agregaItems();
        agregarItemss();
        agregarItemsFrabrica();
        
        productos.creaDBproducto();
        productos=new productos();
       // CampoContenedor.setSelectedIndex(0);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CampoNomProducto = new javax.swing.JTextField();
        jlabel4 = new javax.swing.JLabel();
        CampoContenedor = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        Guardar = new javax.swing.JButton();
        fabricante = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        operaciones = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("REGISTRA UN NUEVO PRODUCTO");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Nombre Producto:");

        CampoNomProducto.setFont(new java.awt.Font("Tempus Sans ITC", 0, 16)); // NOI18N

        jlabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlabel4.setText("Fabricante:");

        CampoContenedor.setFont(new java.awt.Font("Aharoni", 0, 16)); // NOI18N
        CampoContenedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoContenedorActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Contenedor:");

        Guardar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BaseDatos/c-save@0.5x.png"))); // NOI18N
        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        fabricante.setFont(new java.awt.Font("Aharoni", 1, 16)); // NOI18N
        fabricante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fabricanteActionPerformed(evt);
            }
        });

        operaciones.setText("Operaciones");
        jMenuBar1.add(operaciones);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(281, 281, 281)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jlabel4)
                                        .addGap(6, 6, 6)))
                                .addGap(25, 25, 25))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(CampoNomProducto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                            .addComponent(CampoContenedor, javax.swing.GroupLayout.Alignment.LEADING, 0, 265, Short.MAX_VALUE)
                            .addComponent(fabricante, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(308, 308, 308)
                        .addComponent(Guardar)))
                .addContainerGap(311, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CampoNomProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabel4)
                    .addComponent(fabricante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CampoContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(43, 43, 43)
                .addComponent(Guardar)
                .addContainerGap(228, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        boolean estado=this.CampoNomProducto.getText().isEmpty();
       

        
        if(estado==false){
            int contenedor=0;
                productos.setNombre_producto(this.CampoNomProducto.getText().toString());
                String fabricante=fabricantes;
                String contene=CampoContenedor.getSelectedItem().toString();
               
                for(int a=0;a<items.size();a++){
                    if(items.get(a).equals(contene)){
                        contenedor=a+1;
                    }
                }
                
                productos.setFabricante(fabricante);
                productos.setContenedor(contenedor);
                boolean resultado=productos.insertaProducto();
                if(resultado==false){
                    JOptionPane.showMessageDialog(rootPane, " no se a podido crear el producto "+ productos.mensaje, "avizo de resultado", WIDTH);
                }else{
                    JOptionPane.showMessageDialog(rootPane, "se a creado con exito este producto");
                 }
            }else{
            JOptionPane.showMessageDialog(rootPane, " no se pueden guardar si hay campos vacios ", "!Avizo! ", WIDTH, null);
        }
    }//GEN-LAST:event_GuardarActionPerformed

    private void CampoContenedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoContenedorActionPerformed
        String contene=CampoContenedor.getSelectedItem().toString();
        
    }//GEN-LAST:event_CampoContenedorActionPerformed

    private void fabricanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fabricanteActionPerformed
       fabricantes=fabricante.getSelectedItem().toString();
    }//GEN-LAST:event_fabricanteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registroProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registroProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registroProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registroProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registroProducto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CampoContenedor;
    private javax.swing.JTextField CampoNomProducto;
    private javax.swing.JButton Guardar;
    private javax.swing.JComboBox<String> fabricante;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel jlabel4;
    private javax.swing.JMenu operaciones;
    // End of variables declaration//GEN-END:variables

    private void agregaItems() {
        
        this.CampoContenedor.removeAllItems();
        try {
            sentencia= ConectarMysql.obtenerConexion().createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
            ResultSet resultado=sentencia.executeQuery("select * from contenedores");
           
            while(resultado.next()){ // se insertan valores a los items del menu contenedores
            String item=resultado.getString(2);
            
            items.add(item);
            }
            for(int a=0;a<items.size();a++){
            this.CampoContenedor.addItem(items.get(a));
            }
        /*  
            */
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "error faltan elementos para poder realizar esta operacion  ->" +ex.getMessage());
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane,"error "+ e);
        }
    
    }
    private void agregarItemss() {
         ArrayList<JMenuItem> items;
        ItemsMenu obtenerItems=new ItemsMenu();
        items=obtenerItems.items();
        for(int a=0;a<items.size();a++){
            
            int b=a;
            operaciones.add(items.get(a));
            items.get(a).addActionListener(new ActionListener(){
                boolean estados;
                @Override
                public void actionPerformed(ActionEvent e) {
                  // JOptionPane.showMessageDialog(rootPane, e.getActionCommand());
                 estados=obtenerItems.metodos(b);
                 if(estados==true){
                    cerrar();
                 }
                }
            });
       }
      
        
    }

   void cerrar(){
        this.dispose();
    }

    private void agregarItemsFrabrica() {
        fabricante fabrica=new fabricante(1);
        try{
            Statement conexion=ConectarMysql.obtenerConexion().createStatement(ResultSet.CONCUR_READ_ONLY,ResultSet.TYPE_FORWARD_ONLY);
             ResultSet resultado=sentencia.executeQuery("select "+fabrica.getSQL_nombre()+" from fabricante");
        while(resultado.next()){
                String nombre=resultado.getString(1);
                this.itemsFabricante.add(nombre);
                
            }
            for(int a=0;a<itemsFabricante.size();a++){
            this.fabricante.addItem(itemsFabricante.get(a));
        }
    
    }catch(Exception e){
    JOptionPane.showMessageDialog(rootPane, "Error! verifique si el programa Xamp esta iniciado, si no lo esta inicielo e intente de nuevo");
}
    }



}

