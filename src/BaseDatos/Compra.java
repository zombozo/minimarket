
package BaseDatos;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;

/**
 *
 * @author zombozo
 */
public class Compra extends javax.swing.JFrame {
    ArrayList<String>  idProducto=new ArrayList<>();
    public Compra() {
        initComponents();
        boolean estado=compras.CreaDBcompras();
        llenarItemsContenedor();
        llenarItemsProductos();
        llenarItemsProveedor();
        agregarItems();
        this.CampoFechaCompra.setText(variables_globales.fecha());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CampoProducto = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        Crear = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        CampoTotalUnidades = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        CampoPrecioCompra = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        CampoPrecioVenta = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        CampoProveedor = new javax.swing.JComboBox();
        Guardar = new javax.swing.JButton();
        CampoFechaCompra = new javax.swing.JFormattedTextField();
        CampoContenedor = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        infor = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        operaciones = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BaseDatos/ventas.png"))); // NOI18N
        jLabel1.setText("CREAR UNA NUEVA COMPRA");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Fecha de Compra:");

        CampoProducto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Producto");

        Crear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Crear.setText("Crear Nuevo Producto");
        Crear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Total:");

        CampoTotalUnidades.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CampoTotalUnidadesFocusLost(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Unidades");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Precio de compra:");

        CampoPrecioCompra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CampoPrecioCompraFocusLost(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("(precio por unidad)");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Precio de venta:");

        CampoPrecioVenta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CampoPrecioVentaFocusLost(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("(precio por unidad)");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Proveedor:");

        CampoProveedor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        Guardar.setBackground(new java.awt.Color(102, 255, 102));
        Guardar.setText("Guardar esta compra");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        CampoContenedor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CampoContenedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoContenedorActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Contenedor:");

        infor.setColumns(20);
        infor.setRows(5);
        jScrollPane1.setViewportView(infor);

        jLabel12.setText("Observaciones");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Crear Nuevo Contenedor");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Crear Nuevo Proveedor");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        operaciones.setText("Operaciones");
        jMenuBar1.add(operaciones);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel10)
                            .addComponent(jLabel3)
                            .addComponent(jLabel11))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(CampoProveedor, javax.swing.GroupLayout.Alignment.LEADING, 0, 190, Short.MAX_VALUE)
                            .addComponent(CampoProducto, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CampoFechaCompra)
                            .addComponent(CampoContenedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Crear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel12)
                            .addComponent(jLabel8))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(CampoPrecioCompra)
                                    .addComponent(CampoTotalUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(jLabel5))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel7))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CampoPrecioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel9)
                                .addGap(56, 56, 56)
                                .addComponent(Guardar))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jLabel1)))
                .addContainerGap(110, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CampoFechaCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CampoContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CampoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(Crear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CampoProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(CampoTotalUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(CampoPrecioCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(CampoPrecioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(Guardar))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(16, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addGap(56, 56, 56))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
                compras compra= new compras();
                double temporal;
                boolean estado=this.CampoTotalUnidades.getText().isEmpty();
                estado |=this.CampoPrecioCompra.getText().isEmpty();
                estado |=this.CampoPrecioVenta.getText().isEmpty();
       if(estado==false)
       {
           try{
                    compra.setId_producto(Integer.parseInt(this.idProducto.get(this.CampoProducto.getSelectedIndex())));
                    compra.setTotal_producto(Integer.parseInt(this.CampoTotalUnidades.getText().toString()));
                    temporal=Double.parseDouble(this.CampoPrecioCompra.getText().toString());
                    compra.setPrecio_compra_Unidad(temporal);
                    temporal=Double.parseDouble(this.CampoPrecioVenta.getText().toString());
                    compra.setPrecio_venta_unidad(temporal);
                    compra.setFecha_compra(this.CampoFechaCompra.getText().toString());
                    compra.setProveedor(this.CampoProveedor.getSelectedIndex()+1);
                    
           }catch(Exception e)
           {
               JOptionPane.showMessageDialog(rootPane, " Error Revisa los campos ", " error de formatos ", WIDTH);
           }
           
           
           boolean estados=compra.insertaNuevaCompra();
           this.CampoPrecioCompra.setText("");
           this.CampoPrecioVenta.setText("");
           this.CampoTotalUnidades.setText("");
           JOptionPane.showMessageDialog(rootPane, " se a guardado exitosamente!! ");
                    if(estados==false){
                        JOptionPane.showMessageDialog(rootPane, compras.mensajes);
                    }
       }else{
           JOptionPane.showMessageDialog(rootPane,"no podemos guardar si dejas campos vacios", "Avizo de descuido! " , WIDTH);
       }
    }//GEN-LAST:event_GuardarActionPerformed

    private void CampoContenedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoContenedorActionPerformed
           this.CampoProducto.removeAllItems();
           idProducto.clear();
        try{
        Statement conexion=ConectarMysql.obtenerConexion().createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
        int id=this.CampoContenedor.getSelectedIndex()+1;
                String consulta="select * from "+productos.SQL_NombreTabla;
                 ResultSet resultado=conexion.executeQuery(consulta);
                    while(resultado.next()){
                        int id2=resultado.getInt(4);
                        if(id==id2){
                            this.CampoProducto.addItem(resultado.getString(2)+" ("+resultado.getString(3)+")");
                            idProducto.add(resultado.getString(1));
                        }
                    }
                }catch(Exception e){
                            
                            }
    }//GEN-LAST:event_CampoContenedorActionPerformed

    private void CrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearActionPerformed
        String[] args = null;
       registroProducto.main(args);
       this.dispose();
    }//GEN-LAST:event_CrearActionPerformed

    private void CampoTotalUnidadesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CampoTotalUnidadesFocusLost
       try{
        int total=Integer.parseInt(CampoTotalUnidades.getText().toString());
       
       
       }catch(Exception e){
           JOptionPane.showMessageDialog(rootPane, "no es valido el valor Ingresado");
           CampoTotalUnidades.setText("");
           CampoTotalUnidades.hasFocus();
       }
      
    }//GEN-LAST:event_CampoTotalUnidadesFocusLost

    private void CampoPrecioCompraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CampoPrecioCompraFocusLost
       try{
        Double texto=Double.parseDouble(CampoPrecioCompra.getText().toString());
       }catch(Exception e){
           JOptionPane.showMessageDialog(rootPane, "error "+e+"  el campo contiene valores no validos");
       CampoPrecioCompra.setText("");
       CampoPrecioCompra.hasFocus();
       }
    }//GEN-LAST:event_CampoPrecioCompraFocusLost

    private void CampoPrecioVentaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CampoPrecioVentaFocusLost
       try{
        int texto=Integer.parseInt(CampoPrecioVenta.getText().toString());
       }catch(Exception e){
               JOptionPane.showMessageDialog(rootPane, "error "+e+"  contiene caracteres no validos, ingrese solo numeros");
               CampoPrecioVenta.setText("");
               CampoPrecioVenta.hasFocus();
       }
    }//GEN-LAST:event_CampoPrecioVentaFocusLost

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String[] args = null;
        PantallaProveedores.main(args);
        cerrar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String[] args=null;
       contenedores.main(args);
       cerrar();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Compra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Compra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Compra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Compra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Compra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CampoContenedor;
    private javax.swing.JFormattedTextField CampoFechaCompra;
    private javax.swing.JTextField CampoPrecioCompra;
    private javax.swing.JTextField CampoPrecioVenta;
    private javax.swing.JComboBox CampoProducto;
    private javax.swing.JComboBox CampoProveedor;
    private javax.swing.JTextField CampoTotalUnidades;
    private javax.swing.JButton Crear;
    private javax.swing.JButton Guardar;
    private javax.swing.JTextArea infor;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu operaciones;
    // End of variables declaration//GEN-END:variables

    private void llenarItemsProductos() {
        try{
                Statement conexion=ConectarMysql.obtenerConexion().createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                String consulta="select "+productos.SQL_tipoContenedor+" from "+productos.SQL_NombreTabla;
        }catch(Exception e){
            
        }
    }

    private void llenarItemsProveedor() {
       try{
                Statement conexion=ConectarMysql.obtenerConexion().createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                String consulta="select "+proveedores.ColumnaNombre+" from "+proveedores.NombreDB;
                ResultSet resultado=conexion.executeQuery(consulta);
        while(resultado.next()){
            this.CampoProveedor.addItem(resultado.getString(1));
        }
        
       }catch(Exception e){
            
        }
    }

    private void llenarItemsContenedor() {
        try{
                Statement conexion=ConectarMysql.obtenerConexion().createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
                
                String consulta="select * from contenedores";
                ResultSet resultado=conexion.executeQuery(consulta);
                while(resultado.next()){
                    
                    this.CampoContenedor.addItem(resultado.getString(2));      
                }
                
                
        }catch(Exception e){
            
        }
    }
    
    
  private void agregarItems() {
             ArrayList<JMenuItem> items;
            ItemsMenu obtenerItems=new ItemsMenu();
            items=obtenerItems.items();
        for(int a=0;a<items.size();a++)
        {
            int b=a;
            operaciones.add(items.get(a));
            items.get(a).addActionListener(new ActionListener(){
                boolean estados;
                @Override
                public void actionPerformed(ActionEvent e) {
                  // JOptionPane.showMessageDialog(rootPane, e.getActionCommand());
                 estados=obtenerItems.metodos(b);
                 if(estados==true){
                    cerrar();
                 }
                }
            });
        }
      
        
    }

   void cerrar(){
        this.dispose();
    }

    private int obtenerId(int id) {
        for(int a=0;a<idProducto.size();a++){
            int ids=Integer.parseInt(idProducto.get(a));
            if(a==id){
                return ids;
            }
        }
        return -1;
    }

   
}
